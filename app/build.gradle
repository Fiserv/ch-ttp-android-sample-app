plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    alias(libs.plugins.kotlin.kapt)

}

android {
    namespace 'com.fiserv.commercehub.androidttp'
    compileSdk 35

    defaultConfig {
        applicationId "com.fiserv.commercehub.androidttp"
        minSdk 30
        targetSdk 35
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary  true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {

            def propsFile = rootProject.file('keystore.properties')
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }

            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }


        release {
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    flavorDimensions = ["environment"]
    productFlavors {

        cert {
            versionNameSuffix ".${FLAVOUR_VALUE_CERT}.${PPID_VALUE}${PPID_COUNTER_CERT_VALUE}"
            applicationIdSuffix ".${FLAVOUR_VALUE_CERT}"
            resValue "string", APP_NAME, "CERT: TTP"
            buildConfigField "String", ENV, "\"CERT\""
            buildConfigField "String", PPID, "\"${FLAVOUR_VALUE_CERT}.${PPID_VALUE}${PPID_COUNTER_CERT_VALUE}\""
            buildConfigField "String", API_KEY, "\"${API_KEY_CERT_VALUE}\""
            buildConfigField "String", API_SECRET, "\"${API_SECRET_CERT_VALUE}\""
            buildConfigField "String", MID, "\"${MID_CERT_VALUE}\""
            buildConfigField "String", TID, "\"${TID_CERT_VALUE}\""
            buildConfigField "String", HOST_PORT, "\"${HOST_PORT_VALUE}\""
            dimension = "environment"
        }



    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
}

dependencies {

    // TTP Payment SDK with dynamic version updates
    implementation (libs.ttp.payment) {
        changing = true
    }
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.foundation.layout.android
    implementation libs.androidx.navigation.compose
    implementation libs.converter.gson
    implementation libs.ui
    implementation libs.androidx.material3
    implementation libs.ui.tooling.preview
    implementation libs.accompanist.systemuicontroller
    implementation platform(libs.firebase.bom)
    implementation(libs.firebase.crashlytics)
    implementation libs.lottie.compose
    implementation libs.animated.drawable
    implementation libs.androidx.work.runtime.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    implementation libs.play.services.base

}